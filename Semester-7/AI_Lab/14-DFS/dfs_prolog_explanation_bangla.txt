
ржкрзНрж░рзЛрж▓ржЧ (Prolog) ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛: DFS (Depth-First Search)
========================================================

ржкрзНрж░ржержорзЗ ржирж┐ржЪрзЗрж░ ржЧрзНрж░рж╛ржлржЯрж┐ рж╕ржВржЬрзНржЮрж╛ржпрж╝рж┐ржд ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ:

edge(a, b).
edge(a, c).
edge(b, d).
edge(b, e).
edge(c, f).
edge(e, f).

ржЧрзНрж░рж╛ржлржЯрж┐ ржжрзЗржЦрждрзЗ ржПрж░ржХржо:

             a
           /   \
         b       c
       /   \      \
     d      e ------> f

========================================================
ЁЯФ╣ ржкрзНрж░ржзрж╛ржи DFS ржлрж╛ржВрж╢ржи:

dfs(Start, Goal, Path) :-
    dfs_helper(Start, Goal, [Start], Path).

ржмрзНржпрж╛ржЦрзНржпрж╛:
- Start ржерзЗржХрзЗ Goal ржкрж░рзНржпржирзНржд DFS ржЪрж╛рж▓рж╛ржирзЛ рж╣ржмрзЗред
- ржкрзНрж░рж╛ржержорж┐ржХржнрж╛ржмрзЗ Visited list-ржП Start node рж░рж╛ржЦрж╛ рж╣ржпрж╝ред

========================================================
ЁЯФ╣ ржмрзЗрж╕ ржХрзЗрж╕ (ржЧржирзНрждржмрзНржпрзЗ ржкрзМржБржЫрж╛рж▓рзЗ):

dfs_helper(Goal, Goal, Path, Path).

ржмрзНржпрж╛ржЦрзНржпрж╛:
- ржпржжрж┐ Goal ржП ржкрзМржБржЫрзЗ ржпрж╛ржЗ, рждрж╛рж╣рж▓рзЗ ржмрж░рзНрждржорж╛ржи Path-ржЯрж╛ржЗ ржлрж▓рж╛ржлрж▓ред

========================================================
ЁЯФ╣ рж░рж┐ржХрж╛рж░рзНрж╕рж┐ржн ржХрзЗрж╕:

dfs_helper(Current, Goal, Visited, Path) :-
    edge(Current, Next),
    \+ member(Next, Visited),
    dfs_helper(Next, Goal, [Next | Visited], Path).

ЁЯФ╕ ржмрзНржпрж╛ржЦрзНржпрж╛:
1. `edge(Current, Next)`:
   - ржмрж░рзНрждржорж╛ржи ржирзЛржб ржерзЗржХрзЗ ржпрзЗрж╕ржм рж╕ржВржпрзБржХрзНржд ржирзЛржб ржЖржЫрзЗ рждрж╛ ржЦрзЛржБржЬрж╛ рж╣ржпрж╝ред

2. `\+ member(Next, Visited)`:
   - ржкрж░ржмрж░рзНрждрзА ржирзЛржбржЯрж┐ ржпржжрж┐ ржЖржЧрзЗржЗ ржжрзЗржЦрж╛ ржирж╛ рж╣ржпрж╝рзЗ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗржЗ ржЖржорж░рж╛ рж╕рзЗржЯрж╛ ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░ржмрзЛред
   - ржПржЯрж┐ рж▓рзБржк/рж╕рж╛ржЗржХрзЗрж▓ ржПржбрж╝рж╛рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

3. `[Next | Visited]`:
   - ржирждрзБржи ржирзЛржбржЯрж┐ржХрзЗ Visited рж▓рж┐рж╕рзНржЯрзЗ ржпрзБржХрзНржд ржХрж░рж┐ (рж▓рж┐рж╕рзНржЯрзЗрж░ рж╢рзБрж░рзБрждрзЗ)ред

4. `dfs_helper(...)` ржЖржмрж╛рж░ рж░рж┐ржХрж╛рж░рзНрж╕рж┐ржнржнрж╛ржмрзЗ ржХрж▓ рж╣ржпрж╝ ржпрждржХрзНрж╖ржг ржирж╛ Goal ржП ржкрзМржБржЫрж╛ржЗред

========================================================
ЁЯОп ржПржХржЯрж┐ ржХрзЛржпрж╝рзЗрж░рж┐ ржЪрж╛рж▓рж╛ржирзЛ:

?- dfs(a, f, Path).

ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржХрж╛ржЬрзЗрж░ ржмрж┐ржмрж░ржг:

Step 1: Current = a, Visited = [a]
    тЖТ Next = b тЖТ d (dead end)
    тЖТ Backtrack

Step 2: b тЖТ e тЖТ f тЖТ Goal ржкрзЗржпрж╝рзЗ ржЧрзЗрж▓рж╛ржо

ржЕржержмрж╛,
    тЖТ a тЖТ c тЖТ f тЖТ Goal

ржлрж▓рж╛ржлрж▓:
Path = [f, c, a].   (Visited рж▓рж┐рж╕рзНржЯрзЗ ржирзЛржбржЧрзБрж▓рж┐ ржЙрж▓рзНржЯрзЛржнрж╛ржмрзЗ ржпрзЛржЧ рж╣ржпрж╝рзЗржЫрзЗ)

тЬЕ ржЪрж╛ржЗрж▓рзЗ reverse(Path, CorrectOrder) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕ржарж┐ржХ ржЕрж░рзНржбрж╛рж░рзЗржУ ржжрзЗржЦрждрзЗ ржкрж╛рж░рзЛред

========================================================
ЁЯУМ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг:

- member/2 ржкрзНрж░рзЗржбрж┐ржХрзЗржЯ ржЪрзЗржХ ржХрж░рзЗ ржХрзЛржирзЛ ржЙржкрж╛ржжрж╛ржи ржЖржЧрзЗржЗ ржнрж┐ржЬрж┐ржЯ рж╣ржпрж╝рзЗржЫрзЗ ржХрж┐ржирж╛ред
- edge/2 ржжрж┐ржпрж╝рзЗ ржЧрзНрж░рж╛ржл рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред
- DFS ржмрзНржпрж╛ржХржЯрзНрж░рзНржпрж╛ржХрж┐ржВ-ржПрж░ ржорж╛ржзрзНржпржорзЗ ржХрж╛ржЬ ржХрж░рзЗред
- Visited рж▓рж┐рж╕рзНржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржХрж╛рж░ржгрзЗ рж╕рж╛ржЗржХрзЗрж▓ ржПржбрж╝рж╛ржирзЛ ржпрж╛ржпрж╝ред

